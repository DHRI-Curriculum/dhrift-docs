{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome # Welcome to the documentation for DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology). This documentation is designed to help you get started with DHRIFT, understand its features, and learn how to customize and contribute to the platform. To get started, select a topic from the sidebar to the left. If you have any questions or need assistance, please contact the DHRIFT Team .","title":"Welcome"},{"location":"#welcome","text":"Welcome to the documentation for DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology). This documentation is designed to help you get started with DHRIFT, understand its features, and learn how to customize and contribute to the platform. To get started, select a topic from the sidebar to the left. If you have any questions or need assistance, please contact the DHRIFT Team .","title":"Welcome"},{"location":"acknowledgements/","text":"Acknowledgements # Here's a place for extended gratitude.","title":"Acknowledgements"},{"location":"acknowledgements/#acknowledgements","text":"Here's a place for extended gratitude.","title":"Acknowledgements"},{"location":"createworkshop/","text":"Create a DHRIFT Workshop # This page is a synopsis and overview of how to create a DHRIFT workshop. Alternately, you could complete our workshop on Creating a DHRIFT Workshop. Getting Started # To create a new workshop, you will need to follow a few general key steps: Create a new GitHub repository to house your workshops (or use an existing one) Configure your workshop metadata using YAML Write your workshop content in Markdown Add images, downloads (e.g., datasets) and other assets to your workshop, if needed Incorporate interactive features like quizzes, challenges, and code editors, if desired Build and deploy your workshop using GitHub Actions Depending on what you want to achieve with your workshop, you may need to follow additional steps or best practices. We'll cover these in more detail as we go along. Setting up Your Workshop Repository # The first step in creating a new workshop is to set up a GitHub repository to house your workshop content. You can create a new repository from scratch or use an existing repository if you prefer. Considering we have already set up a DHRIFT site and repository using the wizard, we can simply use that repository to house our new workshop and subsequently add it to the available workshops on our site. In general, you should be aware that the DHRIFT platform generates workshops by pointing to a specific repository that contains your workshop files. For instance, in the following URL: https://app.dhrift.org/inst/?instUser=dhri-curriculum&instRepo=dhrift-site-template ...the instUser parameter specifies the GitHub user or organization that owns the repository, and the instRepo parameter specifies the name of the repository. You can use these parameters to point to your own repository and display your workshops on your DHRIFT site. DHRIFT will automatically detect the workshops (markdown files) in your repository and display them on the workshops page. Configuring Workshop Metadata # Once you have set up your workshop repository, you will want to create a new markdown file for your workshop. You can name this file anything you like, but it is a good idea to use a descriptive name that reflects the content of your workshop. For example, if you are creating a workshop on Python programming, you might name your file intro-to-python.md . You can create and edit markdown files locally using a text editor like Visual Studio Code or utilize the Jupyter Notebook code editor here in the browser (just save and download your files to your local file system). Make sure to save your file with the .md extension. If you are using the built-in code editor, you'll notice that there is a markdown option when creating a new file. The first thing you will need to do in your workshop markdown file is configure your workshop metadata using YAML .\" In terms of your workshop, the YAML language allows you to specify metadata such as the workshop title, author, description, learning objectives, estimated time, and more. Here is an example of a simple YAML configuration for an Intro to Python workshop: --- title: Introduction to Python cover title: Introduction to Python description: \"This workshop is designed for beginners who want to learn the basics of Python programming. By the end of this workshop, you will be able to write simple Python programs, work with variables, and use control structures like loops and conditionals.\" programming_language: 'python' learning objectives: - Understand the basic syntax and structure of Python - Learn how to work with variables and data types - Understand control structures like loops and conditionals estimated time: - 2 hours authors: - 'Jimmy Pesto' - 'Bob Belcher' facilitators: - 'Jimmy Pesto' ethical considerations: - \"Learners should be aware of the potential ethical implications of using Python for data analysis and machine learning. For example, it is important to consider issues of bias, privacy, and security when working with data in Python.\" --- First, you'll notice the three dashes at the beginning and end of the YAML configuration. This is a standard way to indicate the start and end of a YAML document. You will always want to enclose your metadata in these dashes at the start of your markdown file. The metadata will comprise the information to display on your workshop's front page. Here's a breakdown of the metadata fields shown above: title specifies the title of the workshop, which will be displayed on the workshop's front page. cover title specifies the title of the workshop that will be displayed in the image gallery of all workshops. Unless it is a very long title that may not display well in terms of the image, it is often the same as the title. description provides a brief overview of the workshop content and objectives. programming_language specifies which code editor to use for the workshop (e.g., Python, Jupyter, JavaScript, R, command line, etc). See below for a list of supported programming languages and the associated metadata field. learning objectives lists the main learning objectives of the workshop. estimated time specifies the estimated time needed to complete the workshop. authors lists the authors of the workshop. facilitators lists the facilitators, or instructors, of the workshop. These are, at bare minimum, the fields you will likely want to include in your workshop metadata. However, it should be noted that the only truly required fields are title , cover title , and description . The other fields are optional but highly recommended for providing a complete and informative workshop experience. You can also add additional metadata fields as needed for your workshop. For example, you might want to include a list of prerequisites, projects, additional resources or tutorials, etc. You can follow the same format as the ethical considerations field shown above for these additional fields, e.g., prerequisites: - \"No prior programming experience is required.\" - \"A basic understanding of computer science concepts is helpful but not necessary.\" Supported Programming Languages # You can include the other code editors supported by DHRIFT in the programming_language field. Here is a list of supported programming languages and their associated metadata fields: Python: 'python' Jupyter Notebooks: 'jupyter' JavaScript: 'javascript' R: 'r' Command Line: 'command_line' HTML and CSS: 'html_css' It will be up to you to decide which code editor (if any) is most appropriate for your workshop content. Writing Workshop Content # Once you have set up your workshop repository and YAML, you can start writing your workshop content in markdown. Markdown is a lightweight markup language that is fairly straightforward to read and write, once you understand the basic syntax. It allows you to format text, add images, and create links without having to write HTML (although it supports many basic HTML features such as text styling and table creation as well). DHRIFT uses standard markdown syntax for formatting text, including headings, lists, links, images, and more. You can find a comprehensive guide to standard markdown syntax here: Markdown Syntax Guide . Beyond that, DHRIFT also includes a few custom markdown extensions that allow you to include interactive features like quizzes, challenges, and code editors in your workshop content. We'll cover these extensions in more detail in the following sections. General Structure # A typical DHRIFT workshop is divided into sections and subsections, each with its own content. You will want to separate your content into logical sections that follow the flow you envision for your workshop. For major sections, you can use level 1 markdown headings ( # ), and for subsections, you can use level 2 headings ( ## ). For instance, in this workshop, we have used level 1 headings for major over-arching sections like \"Introduction to DHRIFT\" and level 2 headings for subsections like \"What is DHRIFT?\", \"Underlying Technologies\", etc. In general, note that both level 1 and level 2 headings will create a new page. DHRIFT will then automatically generate a table of contents for your workshop based on the headings you use. For the most part, you can structure your workshop content as you see fit, but it is generally a good idea to follow a pedagogically conscientious progression from introduction to conclusion. Separating out your content effectively can help learners navigate through the material more easily and tackle the lessons in digestible chunks. Here is an example of how you might structure the beginning of a workshop using markdown headings: # Introduction This section provides a short introduction to the workshop. ## Overview This subsection provides an overview of the workshop and what learners can expect to gain from it. ## Learning Objectives This subsection lists the main learning objectives of the workshop. # Getting Started This creates a new main section for the workshop. ## Setting up Your Environment This subsection covers how to set up the necessary tools and resources to follow along with the workshop. ### Installing Python This (sub)subsection provides instructions on how to install Python on your computer. ## Writing Your First Program This subsection introduces learners to the basics of programming and writing their first program. ### Hello, World! This (sub)subsection covers how to write a simple \"Hello, world!\" program in Python. As you can see, we are utilizing level 1 headings for major sections like \"Introduction\" and \"Getting Started\" and level 2 headings for subsections like \"Overview\", \"Learning Objectives\", \"Setting up Your Environment\", etc. This structure helps to organize the content and make it easier for learners to follow along. Furthermore, we are using level 3 headings for additional (sub)subsections like \"Installing Python\" and \"Hello, World!\" to further break down the content. Note that level 3 headings will be displayed on the same page as the level 1 or 2 heading they are nested under, and will not appear in the table of contents. This can be useful for breaking down content into smaller, more manageable sections without cluttering the table of contents or creating new pages. Adding Images # In addition to text content, you can also add images to your workshop. Images can help illustrate concepts, provide visual interest, and make your workshop more engaging. To add an image to your workshop, you can use standard markdown syntax for images. Here is an example: ![Alt text](/path/to/image.jpg) In this syntax, Alt text is the alternative text for the image, which is displayed if the image fails to load (this should also comprise a short description of the image for accessibility purposes). path/to/image.jpg is the path to the image file in your repository. Typically, you will want to store your images in a subdirectory of your repository, such as images/ , to keep your files organized. Even better would be to store the images in a designated folder for the workshop, e.g., images/your-workshop . Just make sure your folder title follows the exact name of your workshop so DHRIFT knows where to look for it. You can also use a URL to an external image if needed. Code Snippets and Info Boxes # Code Snippets # DHRIFT workshops may also include inline code snippets to demonstrate programming concepts, provide examples, and guide learners through exercises. You can include code snippets in your workshop using standard markdown syntax for code blocks. To create something like the following: print(\"Hello, world!\") ...you can use three backticks (```) to start and end the code block, followed by the language identifier (e.g., python ) to specify the language of the code snippet. In this example, python specifies the language of the code snippet, which helps DHRIFT format the code block correctly. You can replace python with other supported languages like javascript , html , console , etc., as needed. Info Boxes # To create an info box with additional information or tips that stands out from the rest of your text, like the following... This is an info box with additional information or tips for learners. ...you can use the following custom markdown syntax: <Info> This is an info box with additional information or tips for learners. </Info> In this example, the <Info> tag creates an info box with the enclosed text. This can be useful for highlighting important information, providing additional context, or offering tips and suggestions to learners. Incorporating Interactive Features # DHRIFT workshops can include a variety of interactive features to engage learners and reinforce learning. Quizzes # To create a quiz, you can use the following custom markdown syntax: ### Evaluation What front-end technology does DHRIFT use to build its user interfaces? <Quiz> - React* - Angular - Vue - Ember </Quiz> In this example, the (optional heading) Evaluation section introduces a multiple-choice quiz question, and the <Quiz> tag creates the interactive quiz. Learners can select an answer from the list, and DHRIFT will provide feedback on whether the answer is correct or incorrect. To specify a correct answer (or answers), mark it with an asterisk ( * ). Challenges # To create a challenge with a solution that you can show/hide, you can use the following custom markdown syntax: ### Challenge Where are DHRIFT workshops stored? ### Solution <Secret> In a GitHub repository. </Secret> In this example, the (optional heading) Challenge section poses a question or problem, and the <Secret> tag creates a hidden solution that learners can reveal by clicking a button. This allows learners to attempt the challenge on their own before checking the solution. Key Terms # DHRIFT workshops may also include a section of key terms to define and explain unfamiliar concepts. You can include a key terms section in your workshop using the following custom markdown syntax: <Keywords> - DHRIFT DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology) is an open educational resource (OER) and publication platform for DH workshops. Designed by humanities scholars for humanities scholars, DHRIFT provides a minimal computing, accessibility-aware, and interactive environment for teaching fundamental DH concepts. - Markdown Each workshop is created using Markdown, a lightweight markup language that is easy to read and write. Markdown allows you to format text, add images, and create links without having to write HTML. </Keywords> In this example, the <Keywords> tag creates a section of key terms, and each term is defined with a bullet point list. This section can help learners understand and remember important concepts from the workshop. Adding Your Workshop to Your DHRIFT Site # Once you have reached a point where you are satisfied with your workshop content, you can add your workshop to your DHRIFT site. To do this, you will need to push or upload your workshop markdown file to your GitHub repository. DHRIFT will automatically detect the new workshop file and display it on your site. To ensure that your workshop is displayed correctly, keep in mind these checks: Check that your workshop metadata is correctly configured in the YAML front matter. Make sure your workshop markdown files are correctly formatted and free of syntactical errors. Prepare all necessary assets (images, downloads, etc.) to be placed in designated folders in your repository. If everything looks good, there are a few ways you can add your workshop to your repository. If you are familiar with Git and GitHub, you can push your changes directly to your repository using Git commands. For instance, you can add your files to the staging area, commit your changes, and push them to your repository using the following commands: git add -A git commit -m \"Add new workshop\" git push VSCode also has a built-in Git interface that you can use to stage, commit, and push your changes. If you are less familiar with Git or are not using VSCode, you can also use the GitHub web interface to upload your files directly to your repository. Simply navigate to your repository on GitHub, click the \"Add file\" button, and select \"Upload files\" to add your workshop markdown file. Make sure you are also adding any images or other assets to the correct folders in your repository. Reviewing Your Workshop # To see your workshop in action, you can navigate to your DHRIFT site and check the workshops page. Your new workshop should appear in the list of available workshops, and you should be able to click on it to view the workshop content. Make sure your DHRIFT site is pointed to the correct repository and branch where your workshop files are stored (please see the \"Setting up Your Workshop Repository\" section if you need a refresher on how to point to your repo).","title":"Creating a DHRIFT workshop"},{"location":"createworkshop/#create-a-dhrift-workshop","text":"This page is a synopsis and overview of how to create a DHRIFT workshop. Alternately, you could complete our workshop on Creating a DHRIFT Workshop.","title":"Create a DHRIFT Workshop"},{"location":"createworkshop/#getting-started","text":"To create a new workshop, you will need to follow a few general key steps: Create a new GitHub repository to house your workshops (or use an existing one) Configure your workshop metadata using YAML Write your workshop content in Markdown Add images, downloads (e.g., datasets) and other assets to your workshop, if needed Incorporate interactive features like quizzes, challenges, and code editors, if desired Build and deploy your workshop using GitHub Actions Depending on what you want to achieve with your workshop, you may need to follow additional steps or best practices. We'll cover these in more detail as we go along.","title":"Getting Started"},{"location":"createworkshop/#setting-up-your-workshop-repository","text":"The first step in creating a new workshop is to set up a GitHub repository to house your workshop content. You can create a new repository from scratch or use an existing repository if you prefer. Considering we have already set up a DHRIFT site and repository using the wizard, we can simply use that repository to house our new workshop and subsequently add it to the available workshops on our site. In general, you should be aware that the DHRIFT platform generates workshops by pointing to a specific repository that contains your workshop files. For instance, in the following URL: https://app.dhrift.org/inst/?instUser=dhri-curriculum&instRepo=dhrift-site-template ...the instUser parameter specifies the GitHub user or organization that owns the repository, and the instRepo parameter specifies the name of the repository. You can use these parameters to point to your own repository and display your workshops on your DHRIFT site. DHRIFT will automatically detect the workshops (markdown files) in your repository and display them on the workshops page.","title":"Setting up Your Workshop Repository"},{"location":"createworkshop/#configuring-workshop-metadata","text":"Once you have set up your workshop repository, you will want to create a new markdown file for your workshop. You can name this file anything you like, but it is a good idea to use a descriptive name that reflects the content of your workshop. For example, if you are creating a workshop on Python programming, you might name your file intro-to-python.md . You can create and edit markdown files locally using a text editor like Visual Studio Code or utilize the Jupyter Notebook code editor here in the browser (just save and download your files to your local file system). Make sure to save your file with the .md extension. If you are using the built-in code editor, you'll notice that there is a markdown option when creating a new file. The first thing you will need to do in your workshop markdown file is configure your workshop metadata using YAML .\" In terms of your workshop, the YAML language allows you to specify metadata such as the workshop title, author, description, learning objectives, estimated time, and more. Here is an example of a simple YAML configuration for an Intro to Python workshop: --- title: Introduction to Python cover title: Introduction to Python description: \"This workshop is designed for beginners who want to learn the basics of Python programming. By the end of this workshop, you will be able to write simple Python programs, work with variables, and use control structures like loops and conditionals.\" programming_language: 'python' learning objectives: - Understand the basic syntax and structure of Python - Learn how to work with variables and data types - Understand control structures like loops and conditionals estimated time: - 2 hours authors: - 'Jimmy Pesto' - 'Bob Belcher' facilitators: - 'Jimmy Pesto' ethical considerations: - \"Learners should be aware of the potential ethical implications of using Python for data analysis and machine learning. For example, it is important to consider issues of bias, privacy, and security when working with data in Python.\" --- First, you'll notice the three dashes at the beginning and end of the YAML configuration. This is a standard way to indicate the start and end of a YAML document. You will always want to enclose your metadata in these dashes at the start of your markdown file. The metadata will comprise the information to display on your workshop's front page. Here's a breakdown of the metadata fields shown above: title specifies the title of the workshop, which will be displayed on the workshop's front page. cover title specifies the title of the workshop that will be displayed in the image gallery of all workshops. Unless it is a very long title that may not display well in terms of the image, it is often the same as the title. description provides a brief overview of the workshop content and objectives. programming_language specifies which code editor to use for the workshop (e.g., Python, Jupyter, JavaScript, R, command line, etc). See below for a list of supported programming languages and the associated metadata field. learning objectives lists the main learning objectives of the workshop. estimated time specifies the estimated time needed to complete the workshop. authors lists the authors of the workshop. facilitators lists the facilitators, or instructors, of the workshop. These are, at bare minimum, the fields you will likely want to include in your workshop metadata. However, it should be noted that the only truly required fields are title , cover title , and description . The other fields are optional but highly recommended for providing a complete and informative workshop experience. You can also add additional metadata fields as needed for your workshop. For example, you might want to include a list of prerequisites, projects, additional resources or tutorials, etc. You can follow the same format as the ethical considerations field shown above for these additional fields, e.g., prerequisites: - \"No prior programming experience is required.\" - \"A basic understanding of computer science concepts is helpful but not necessary.\"","title":"Configuring Workshop Metadata"},{"location":"createworkshop/#supported-programming-languages","text":"You can include the other code editors supported by DHRIFT in the programming_language field. Here is a list of supported programming languages and their associated metadata fields: Python: 'python' Jupyter Notebooks: 'jupyter' JavaScript: 'javascript' R: 'r' Command Line: 'command_line' HTML and CSS: 'html_css' It will be up to you to decide which code editor (if any) is most appropriate for your workshop content.","title":"Supported Programming Languages"},{"location":"createworkshop/#writing-workshop-content","text":"Once you have set up your workshop repository and YAML, you can start writing your workshop content in markdown. Markdown is a lightweight markup language that is fairly straightforward to read and write, once you understand the basic syntax. It allows you to format text, add images, and create links without having to write HTML (although it supports many basic HTML features such as text styling and table creation as well). DHRIFT uses standard markdown syntax for formatting text, including headings, lists, links, images, and more. You can find a comprehensive guide to standard markdown syntax here: Markdown Syntax Guide . Beyond that, DHRIFT also includes a few custom markdown extensions that allow you to include interactive features like quizzes, challenges, and code editors in your workshop content. We'll cover these extensions in more detail in the following sections.","title":"Writing Workshop Content"},{"location":"createworkshop/#general-structure","text":"A typical DHRIFT workshop is divided into sections and subsections, each with its own content. You will want to separate your content into logical sections that follow the flow you envision for your workshop. For major sections, you can use level 1 markdown headings ( # ), and for subsections, you can use level 2 headings ( ## ). For instance, in this workshop, we have used level 1 headings for major over-arching sections like \"Introduction to DHRIFT\" and level 2 headings for subsections like \"What is DHRIFT?\", \"Underlying Technologies\", etc. In general, note that both level 1 and level 2 headings will create a new page. DHRIFT will then automatically generate a table of contents for your workshop based on the headings you use. For the most part, you can structure your workshop content as you see fit, but it is generally a good idea to follow a pedagogically conscientious progression from introduction to conclusion. Separating out your content effectively can help learners navigate through the material more easily and tackle the lessons in digestible chunks. Here is an example of how you might structure the beginning of a workshop using markdown headings: # Introduction This section provides a short introduction to the workshop. ## Overview This subsection provides an overview of the workshop and what learners can expect to gain from it. ## Learning Objectives This subsection lists the main learning objectives of the workshop. # Getting Started This creates a new main section for the workshop. ## Setting up Your Environment This subsection covers how to set up the necessary tools and resources to follow along with the workshop. ### Installing Python This (sub)subsection provides instructions on how to install Python on your computer. ## Writing Your First Program This subsection introduces learners to the basics of programming and writing their first program. ### Hello, World! This (sub)subsection covers how to write a simple \"Hello, world!\" program in Python. As you can see, we are utilizing level 1 headings for major sections like \"Introduction\" and \"Getting Started\" and level 2 headings for subsections like \"Overview\", \"Learning Objectives\", \"Setting up Your Environment\", etc. This structure helps to organize the content and make it easier for learners to follow along. Furthermore, we are using level 3 headings for additional (sub)subsections like \"Installing Python\" and \"Hello, World!\" to further break down the content. Note that level 3 headings will be displayed on the same page as the level 1 or 2 heading they are nested under, and will not appear in the table of contents. This can be useful for breaking down content into smaller, more manageable sections without cluttering the table of contents or creating new pages.","title":"General Structure"},{"location":"createworkshop/#adding-images","text":"In addition to text content, you can also add images to your workshop. Images can help illustrate concepts, provide visual interest, and make your workshop more engaging. To add an image to your workshop, you can use standard markdown syntax for images. Here is an example: ![Alt text](/path/to/image.jpg) In this syntax, Alt text is the alternative text for the image, which is displayed if the image fails to load (this should also comprise a short description of the image for accessibility purposes). path/to/image.jpg is the path to the image file in your repository. Typically, you will want to store your images in a subdirectory of your repository, such as images/ , to keep your files organized. Even better would be to store the images in a designated folder for the workshop, e.g., images/your-workshop . Just make sure your folder title follows the exact name of your workshop so DHRIFT knows where to look for it. You can also use a URL to an external image if needed.","title":"Adding Images"},{"location":"createworkshop/#code-snippets-and-info-boxes","text":"","title":"Code Snippets and Info Boxes"},{"location":"createworkshop/#code-snippets","text":"DHRIFT workshops may also include inline code snippets to demonstrate programming concepts, provide examples, and guide learners through exercises. You can include code snippets in your workshop using standard markdown syntax for code blocks. To create something like the following: print(\"Hello, world!\") ...you can use three backticks (```) to start and end the code block, followed by the language identifier (e.g., python ) to specify the language of the code snippet. In this example, python specifies the language of the code snippet, which helps DHRIFT format the code block correctly. You can replace python with other supported languages like javascript , html , console , etc., as needed.","title":"Code Snippets"},{"location":"createworkshop/#info-boxes","text":"To create an info box with additional information or tips that stands out from the rest of your text, like the following... This is an info box with additional information or tips for learners. ...you can use the following custom markdown syntax: <Info> This is an info box with additional information or tips for learners. </Info> In this example, the <Info> tag creates an info box with the enclosed text. This can be useful for highlighting important information, providing additional context, or offering tips and suggestions to learners.","title":"Info Boxes"},{"location":"createworkshop/#incorporating-interactive-features","text":"DHRIFT workshops can include a variety of interactive features to engage learners and reinforce learning.","title":"Incorporating Interactive Features"},{"location":"createworkshop/#quizzes","text":"To create a quiz, you can use the following custom markdown syntax: ### Evaluation What front-end technology does DHRIFT use to build its user interfaces? <Quiz> - React* - Angular - Vue - Ember </Quiz> In this example, the (optional heading) Evaluation section introduces a multiple-choice quiz question, and the <Quiz> tag creates the interactive quiz. Learners can select an answer from the list, and DHRIFT will provide feedback on whether the answer is correct or incorrect. To specify a correct answer (or answers), mark it with an asterisk ( * ).","title":"Quizzes"},{"location":"createworkshop/#challenges","text":"To create a challenge with a solution that you can show/hide, you can use the following custom markdown syntax: ### Challenge Where are DHRIFT workshops stored? ### Solution <Secret> In a GitHub repository. </Secret> In this example, the (optional heading) Challenge section poses a question or problem, and the <Secret> tag creates a hidden solution that learners can reveal by clicking a button. This allows learners to attempt the challenge on their own before checking the solution.","title":"Challenges"},{"location":"createworkshop/#key-terms","text":"DHRIFT workshops may also include a section of key terms to define and explain unfamiliar concepts. You can include a key terms section in your workshop using the following custom markdown syntax: <Keywords> - DHRIFT DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology) is an open educational resource (OER) and publication platform for DH workshops. Designed by humanities scholars for humanities scholars, DHRIFT provides a minimal computing, accessibility-aware, and interactive environment for teaching fundamental DH concepts. - Markdown Each workshop is created using Markdown, a lightweight markup language that is easy to read and write. Markdown allows you to format text, add images, and create links without having to write HTML. </Keywords> In this example, the <Keywords> tag creates a section of key terms, and each term is defined with a bullet point list. This section can help learners understand and remember important concepts from the workshop.","title":"Key Terms"},{"location":"createworkshop/#adding-your-workshop-to-your-dhrift-site","text":"Once you have reached a point where you are satisfied with your workshop content, you can add your workshop to your DHRIFT site. To do this, you will need to push or upload your workshop markdown file to your GitHub repository. DHRIFT will automatically detect the new workshop file and display it on your site. To ensure that your workshop is displayed correctly, keep in mind these checks: Check that your workshop metadata is correctly configured in the YAML front matter. Make sure your workshop markdown files are correctly formatted and free of syntactical errors. Prepare all necessary assets (images, downloads, etc.) to be placed in designated folders in your repository. If everything looks good, there are a few ways you can add your workshop to your repository. If you are familiar with Git and GitHub, you can push your changes directly to your repository using Git commands. For instance, you can add your files to the staging area, commit your changes, and push them to your repository using the following commands: git add -A git commit -m \"Add new workshop\" git push VSCode also has a built-in Git interface that you can use to stage, commit, and push your changes. If you are less familiar with Git or are not using VSCode, you can also use the GitHub web interface to upload your files directly to your repository. Simply navigate to your repository on GitHub, click the \"Add file\" button, and select \"Upload files\" to add your workshop markdown file. Make sure you are also adding any images or other assets to the correct folders in your repository.","title":"Adding Your Workshop to Your DHRIFT Site"},{"location":"createworkshop/#reviewing-your-workshop","text":"To see your workshop in action, you can navigate to your DHRIFT site and check the workshops page. Your new workshop should appear in the list of available workshops, and you should be able to click on it to view the workshop content. Make sure your DHRIFT site is pointed to the correct repository and branch where your workshop files are stored (please see the \"Setting up Your Workshop Repository\" section if you need a refresher on how to point to your repo).","title":"Reviewing Your Workshop"},{"location":"customize/","text":"Create a DHRIFT Institute Landing Page # DHRIFT is predicated on the idea that learning is a means of building communities of practice and that learning communities are best positioned to determine what to focus on and how to organize their own learning events. As a result, we have created a workflow for taking the content available through DHRIFT Core's directory of workshops and to create a landing page that draws from that content and allows for customization. What is a DHRIFT Institute Landing Page # A DHRIFT Institute Landing Page is a static webpage that can be hosted for free on GitHub pages. When creating your own series of workshops, digital institute, or even a course, you may want to pick and choose which workshops you would like to include. A DHRIFT Institute Landing Page assembles important information about your event combines it with a list of DHRIFT workshops of your choosing, and generates a static web page for participants to use. See our GC Digital Research Institute ) for an example. Requirements to Create a DHRIFT Landing Page # DHRIFT's Institute Landing Page requires that you have a GitHub account set up in order to generate the site and to post it on GitHub pages. About the DHRIFT Wizard # Overview # To make the site creation process easier, the DHRIFT Wizard will walk users through the step-by-step process of creating a new DHRIFT Institute Landing Page. The wizard will ask for core information about your institute. Then you will click on a \"Create Site\" button. The Wizard will take the information you have input, combine it with the workshops and features of the DHRIFT App, and then store a new repository in your GitHub account. When your Landing Page is complete, navigate to http://dhrift. .github.io and see what you've created. Begin using the DHRIFT Wizard at https://app.dhrift.org/wizard . How the DHRIFT Wizard Works # The DHRIFT Wizard is an application that collects information that you in put into each field. When you click \"Create Institute,\" the application assembles all of the information and stores it in a file. DHRIFT takes Accessing the DHRIFT Wizard # From the dhrift.org landing page, click the \"Grow\" link, or use this URL: https://dhrift.org/create . Getting Started # Go to https://dhrift.org/create to access the DHRIFT Institute Landing Page Wizard. < > The first page of the wizard will encourage you to assemble all of the information you need before getting started. That information may include the following: A title, description, format, location, and contact information for your event Dates, times, titles, DHRIFT workshops, resources, names and contact names of instructors, and any details participants should know. Any social media, sponsors, logos, and/or a replacement hero image you may want to use in place of our defaults Your GitHub credentials. TIP # Currently, DHRIFT cannot store information about your institute in the browser and it is unable to read from files already in your repository. As a result, creating an institute automatically overwrites the previous institute information. Admittedly, this is not ideal and is a known bug. Our recommendation in the meantime is to create a folder or file that contains all of the information you are about to input into the Wizard. Use that file to copy and paste the data into the wizard. Doing so will mean that your changes are not lost and that you can continue to make changes. We apologize for the inconvenience, but we are working to make this part of the process go more smoothly as part of ongoing development. General Information # The DHRIFT Wizard will ask first for information pertaining to the entire event or institute you are creating. This includes the following fields which are explained in detail: The title # The title in the General Information section of the DHRIFT Wizard refers to the title that will appear in the institute landing page hero slide at the top of the page. Since DHRIFT can be used for a variety of learning settings, this might be the name of the event (such as the GC Digital Research Institute) or the title of the course you are teaching. ** This field is required ** Institute / Event / Course Dates # ** This field is required ** Using the date picker, select the starting date and end date of your event. You do not need to choose times at this point. More specific information about sessions include information for times and dates. This information will display inside the image at the top of the DHRIFT Landing Page. Format # You can include information about what type of learning event this will be. There are three options: Online, In-person, and Hybrid. Select the radio button next to the most appropriate description. This field is optional. Host or Organizer # ** This field is required. ** Insert the name of the organization or group hosting the learning event. For example: Our University, Research Office. Tagline # Insert text up to a maximum of 10 words for a tagline. This text will appear in the right hand side of the hero image at the top of the page. This field is optional. If there is no text inside the area will simply not display text. Short Description # Text entered into this field will display on the DHRIFT Institute Landing Page directly below the hero image and above the schedule. Only text up to 150 words will display properly. This field is not required and if it is left blank no text will display on this area of the page. Things to consider # Editing your DHRIFT Institute site # Troubleshooting #","title":"Customizing a DHRIFT Institute"},{"location":"customize/#create-a-dhrift-institute-landing-page","text":"DHRIFT is predicated on the idea that learning is a means of building communities of practice and that learning communities are best positioned to determine what to focus on and how to organize their own learning events. As a result, we have created a workflow for taking the content available through DHRIFT Core's directory of workshops and to create a landing page that draws from that content and allows for customization.","title":"Create a DHRIFT Institute Landing Page"},{"location":"customize/#what-is-a-dhrift-institute-landing-page","text":"A DHRIFT Institute Landing Page is a static webpage that can be hosted for free on GitHub pages. When creating your own series of workshops, digital institute, or even a course, you may want to pick and choose which workshops you would like to include. A DHRIFT Institute Landing Page assembles important information about your event combines it with a list of DHRIFT workshops of your choosing, and generates a static web page for participants to use. See our GC Digital Research Institute ) for an example.","title":"What is a DHRIFT Institute Landing Page"},{"location":"customize/#requirements-to-create-a-dhrift-landing-page","text":"DHRIFT's Institute Landing Page requires that you have a GitHub account set up in order to generate the site and to post it on GitHub pages.","title":"Requirements to Create a DHRIFT Landing Page"},{"location":"customize/#about-the-dhrift-wizard","text":"","title":"About the DHRIFT Wizard"},{"location":"customize/#overview","text":"To make the site creation process easier, the DHRIFT Wizard will walk users through the step-by-step process of creating a new DHRIFT Institute Landing Page. The wizard will ask for core information about your institute. Then you will click on a \"Create Site\" button. The Wizard will take the information you have input, combine it with the workshops and features of the DHRIFT App, and then store a new repository in your GitHub account. When your Landing Page is complete, navigate to http://dhrift. .github.io and see what you've created. Begin using the DHRIFT Wizard at https://app.dhrift.org/wizard .","title":"Overview"},{"location":"customize/#how-the-dhrift-wizard-works","text":"The DHRIFT Wizard is an application that collects information that you in put into each field. When you click \"Create Institute,\" the application assembles all of the information and stores it in a file. DHRIFT takes","title":"How the DHRIFT Wizard Works"},{"location":"customize/#accessing-the-dhrift-wizard","text":"From the dhrift.org landing page, click the \"Grow\" link, or use this URL: https://dhrift.org/create .","title":"Accessing the DHRIFT Wizard"},{"location":"customize/#getting-started","text":"Go to https://dhrift.org/create to access the DHRIFT Institute Landing Page Wizard. < > The first page of the wizard will encourage you to assemble all of the information you need before getting started. That information may include the following: A title, description, format, location, and contact information for your event Dates, times, titles, DHRIFT workshops, resources, names and contact names of instructors, and any details participants should know. Any social media, sponsors, logos, and/or a replacement hero image you may want to use in place of our defaults Your GitHub credentials.","title":"Getting Started"},{"location":"customize/#tip","text":"Currently, DHRIFT cannot store information about your institute in the browser and it is unable to read from files already in your repository. As a result, creating an institute automatically overwrites the previous institute information. Admittedly, this is not ideal and is a known bug. Our recommendation in the meantime is to create a folder or file that contains all of the information you are about to input into the Wizard. Use that file to copy and paste the data into the wizard. Doing so will mean that your changes are not lost and that you can continue to make changes. We apologize for the inconvenience, but we are working to make this part of the process go more smoothly as part of ongoing development.","title":"TIP"},{"location":"customize/#general-information","text":"The DHRIFT Wizard will ask first for information pertaining to the entire event or institute you are creating. This includes the following fields which are explained in detail:","title":"General Information"},{"location":"customize/#the-title","text":"The title in the General Information section of the DHRIFT Wizard refers to the title that will appear in the institute landing page hero slide at the top of the page. Since DHRIFT can be used for a variety of learning settings, this might be the name of the event (such as the GC Digital Research Institute) or the title of the course you are teaching. ** This field is required **","title":"The title"},{"location":"customize/#institute-event-course-dates","text":"** This field is required ** Using the date picker, select the starting date and end date of your event. You do not need to choose times at this point. More specific information about sessions include information for times and dates. This information will display inside the image at the top of the DHRIFT Landing Page.","title":"Institute / Event / Course Dates"},{"location":"customize/#format","text":"You can include information about what type of learning event this will be. There are three options: Online, In-person, and Hybrid. Select the radio button next to the most appropriate description. This field is optional.","title":"Format"},{"location":"customize/#host-or-organizer","text":"** This field is required. ** Insert the name of the organization or group hosting the learning event. For example: Our University, Research Office.","title":"Host or Organizer"},{"location":"customize/#tagline","text":"Insert text up to a maximum of 10 words for a tagline. This text will appear in the right hand side of the hero image at the top of the page. This field is optional. If there is no text inside the area will simply not display text.","title":"Tagline"},{"location":"customize/#short-description","text":"Text entered into this field will display on the DHRIFT Institute Landing Page directly below the hero image and above the schedule. Only text up to 150 words will display properly. This field is not required and if it is left blank no text will display on this area of the page.","title":"Short Description"},{"location":"customize/#things-to-consider","text":"","title":"Things to consider"},{"location":"customize/#editing-your-dhrift-institute-site","text":"","title":"Editing your DHRIFT Institute site"},{"location":"customize/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"features/","text":"Features # This is place holder text for a page about the features in DHRIFT broken down into sections For Learners # For Instructors # For Workshop Authors # For Institute Hosts #","title":"Features"},{"location":"features/#features","text":"This is place holder text for a page about the features in DHRIFT broken down into sections","title":"Features"},{"location":"features/#for-learners","text":"","title":"For Learners"},{"location":"features/#for-instructors","text":"","title":"For Instructors"},{"location":"features/#for-workshop-authors","text":"","title":"For Workshop Authors"},{"location":"features/#for-institute-hosts","text":"","title":"For Institute Hosts"},{"location":"glossary/","text":"The DHRIFT Glossary # This page is going to explain about the DHRIFT Glossary and the following sub topics: How to use the glossary # How to submit an entry for consideration # How to modify the glossary on your own DHRIFT institute site #","title":"Working with the Glossary"},{"location":"glossary/#the-dhrift-glossary","text":"This page is going to explain about the DHRIFT Glossary and the following sub topics:","title":"The DHRIFT Glossary"},{"location":"glossary/#how-to-use-the-glossary","text":"","title":"How to use the glossary"},{"location":"glossary/#how-to-submit-an-entry-for-consideration","text":"","title":"How to submit an entry for consideration"},{"location":"glossary/#how-to-modify-the-glossary-on-your-own-dhrift-institute-site","text":"","title":"How to modify the glossary on your own DHRIFT institute site"},{"location":"home/","text":"DHRIFT Documentation # This documentation is designed to help you learn how to use the DHRIFT platform to create and manage digital humanities workshops and events. To learn more about the DHRIFT project, please visit the DHRIFT informational website . To start learning or teaching with the platform, visit the DHRIFT app .","title":"Home"},{"location":"home/#dhrift-documentation","text":"This documentation is designed to help you learn how to use the DHRIFT platform to create and manage digital humanities workshops and events. To learn more about the DHRIFT project, please visit the DHRIFT informational website . To start learning or teaching with the platform, visit the DHRIFT app .","title":"DHRIFT Documentation"},{"location":"howdhrift/","text":"How Does DHRIFT Work? DHRIFT is built on a few key technologies that make it easy to create, manage, and publish DH workshops. These technologies include: GitHub: DHRIFT uses GitHub to store and manage workshop content. Each workshop is stored in a GitHub repository, which contains the workshop\u2019s markdown files, images, and other assets. GitHub also provides version control, so you can track changes to your workshop content over time. Markdown: DHRIFT uses Markdown to write workshop content. Markdown is a lightweight markup language that is easy to read and write. It allows you to format text, add images, and create links without having to write HTML. YAML: DHRIFT uses YAML to configure workshop metadata. YAML is a human-readable data serialization format that is easy to read and write. It allows you to specify metadata such as the workshop title, author, and description. React: DHRIFT\u2019s frontend is built with React , a JavaScript library for building user interfaces. React allows us to create interactive, responsive, and accessible interfaces for our workshops. WebAssembly: DHRIFT uses WebAssembly to run code snippets in the browser. WebAssembly is a low-level programming language that is designed to run fast and efficiently in web browsers. It allows us to incorporate code editors in a secure and sandboxed environment so that learners can immediately see the results of their code. GitHub Actions: DHRIFT uses GitHub Actions to automate the process of building and deploying workshop content. When you make changes to your workshop content, GitHub Actions will automatically build and deploy the changes to your DHRIFT site.","title":"How does DHRIFT work?"},{"location":"learn/","text":"How to Learn with DHRIFT # This is a place holder for information about how to learn with DHRIFT. For example, it will cover various features that you can use, what's there, how to get the most out of the platform, etc.","title":"Learning with DHRIFT"},{"location":"learn/#how-to-learn-with-dhrift","text":"This is a place holder for information about how to learn with DHRIFT. For example, it will cover various features that you can use, what's there, how to get the most out of the platform, etc.","title":"How to Learn with DHRIFT"},{"location":"license/","text":"License # We should have information about the licensing.","title":"License"},{"location":"license/#license","text":"We should have information about the licensing.","title":"License"},{"location":"modifyworkshop/","text":"Modifying a DHRIFT Workshop # Prerequisite: Getting Started #","title":"Modifying a DHRIFT workshop"},{"location":"modifyworkshop/#modifying-a-dhrift-workshop","text":"Prerequisite:","title":"Modifying a DHRIFT Workshop"},{"location":"modifyworkshop/#getting-started","text":"","title":"Getting Started"},{"location":"propose-submit/","text":"Propose and Submit a New Workshop # Proposing a New Workshop # If you have an idea for a new workshop that you would like to propose to add to our core curriculum , please follow the steps below: Contact the DHRIFT Curriculum Team to discuss your idea. We can help you refine your proposal and provide guidance on how to structure your workshop. In your email, please include the following information: An abstract for your workshop (100 words or less, will be used for the workshop description) The intended audience for your workshop The learning objectives and outcomes you hope to achieve Any special requirements or resources needed to develop the workshop Before proposing a new workshop, please review our workshop development guidelines to ensure that your workshop follows best pedagogical practices and includes all necessary information. If your workshop proposal is accepted, we'll contact you to discuss next steps. You'll be responsible for developing the workshop content and materials, which will be reviewed by the DHRIFT Curriculum team before being added to the core curriculum. Once your workshop is created, follow the steps below to submit it for review. Submitting a Workshop for Review # If you've already developed a workshop and proposed the workshop to our team, you can submit it for review by following the steps below: Create a free GitHub account if you don't already have one. You'll need a GitHub account to submit your workshop materials and collaborate with the DHRIFT Curriculum Team. You can sign up for an account at GitHub.com . Make sure your workshop aligns with our workshop development guidelines . Contact the DHRIFT Curriculum Team who will then give you upload access to our submission repository . Clone the submission repository to your local machine and add your workshop materials to the repository. (You can also manually upload your workshop materials to the repository through the GitHub interface.) When adding your workshop materials, make sure to include the following files and information: Your workshop markdown file in the root directory (see our workshop anatomy for formatting specifications and our workshop guidelines for content requirements) If your workshop contains images, you must create a new folder in the /images directory and add your images to that folder. Your folder should be named the same as your workshop markdown file. Make sure to reference the images in your markdown file using the correct file path, e.g, ![alt text](/images/your-folder/your-image.jpg) If your workshop is supported by additional resources (e.g., code files, datasets), you must create a new folder in the /uploads directory and add your materials to that folder. Your folder should be named the same as your workshop markdown file. Make sure to reference the resources in your markdown file using the correct file path, e.g., /uploads/your-folder/your-resource.csv Create a pull request to submit your workshop for review. In your pull request, include a brief description of your workshop's materials and any special instructions or requirements for review. Once your pull request is submitted, the DHRIFT Curriculum Team will review your workshop and provide feedback by creating an issue . Issues act as a way to track and discuss changes to your workshop. We will correct any immediate formatting errors but you may be asked to make revisions to your workshop based on this feedback. All subsequent revisions should be made directly to the files in our submissions repository to ensure you are working from the latest version of the lesson file. Please respond to any feedback in a timely manner to expedite the review process. Note that issues, and subsequently the peer review discussion, are public. If you wish to speak with us privately about any feedback, please email the DHRIFT Curriculum Team . After your workshop has been reviewed and accepted, we will merge your pull request and your workshop will be added to the core curriculum. You will be credited as the workshop creator and will have the opportunity to contribute to future updates and revisions. If you would like to revise or update your workshop after it has been published, you can create a new pull request with your changes. The DHRIFT Curriculum Team will review your revisions and update the workshop as needed, following the same process as above. Please note that if we encounter errors in your workshop that are the result of further development of the DHRIFT platform, we will make the necessary changes to your workshop to ensure that it remains functional and accessible. We will notify you of any changes made to your workshop and provide an opportunity for you to review and approve them before they are published. After 3 years, we will add a note to the workshop indicating that it might be out of date and may need to be updated. We will also reach out to you to see if you would like to update the workshop or if you would like us to archive it. If you have any questions or need assistance with proposing or submitting a workshop, please contact the DHRIFT Curriculum Team . We're here to help! The Review Timeline # All workshops submitted to the DHRIFT Curriculum Team for review will undergo a peer review process to ensure that they meet our workshop development guidelines and pedagogical standards. The peer review process includes the following steps: Initial Review : The DHRIFT Curriculum Team will review your workshop proposal or submission to ensure that it aligns with our guidelines and includes all necessary information. Peer Review : Your workshop will be reviewed by members of the DHRIFT Curriculum Team and external reviewers with expertise in the workshop topic. Reviewers will provide feedback on the content, structure, and pedagogical approach of your workshop in a GitHub issue. Feedback and Revisions : Check the feedback on your workshop from the DHRIFT Curriculum Team and reviewers. You may be asked to make revisions to your workshop based on this feedback. Final Review : Once your workshop has been revised, it will undergo a final review by the DHRIFT Curriculum Team to ensure that all feedback has been addressed and that the workshop meets our standards. Acceptance and Publication : If your workshop is accepted, it will be added to the core curriculum and made available to the public. You will be credited as the workshop creator and will have the opportunity to contribute to future updates and revisions. The peer review process is designed to ensure that all workshops in the DHRIFT core curriculum meet our high standards for quality, accessibility, and engagement. We appreciate your contributions to our community of practice and look forward to working with you to develop innovative and engaging workshops for digital humanities research and teaching. After Your Workshop is Published # Once your workshop has been accepted and published in the core curriculum, it will be available to the public through the DHRIFT platform. Participants will be able to access your workshop materials, resources, and activities, and engage with the content at their own pace. As the workshop creator, you will have the opportunity to update and revise your workshop as needed, based on feedback from participants and the DHRIFT Curriculum Team. You can also contribute new workshops and resources to the core curriculum, expanding the range of topics and activities available to our community of learners. Holding Us Accountable # The DHRIFT Curriculum Team is committed to providing a transparent and inclusive peer review process for all workshop submissions. We welcome feedback and suggestions for improving our review process and ensuring that all workshops meet our high standards for quality and accessibility.","title":"Propose and Submit a Workshop"},{"location":"propose-submit/#propose-and-submit-a-new-workshop","text":"","title":"Propose and Submit a New Workshop"},{"location":"propose-submit/#proposing-a-new-workshop","text":"If you have an idea for a new workshop that you would like to propose to add to our core curriculum , please follow the steps below: Contact the DHRIFT Curriculum Team to discuss your idea. We can help you refine your proposal and provide guidance on how to structure your workshop. In your email, please include the following information: An abstract for your workshop (100 words or less, will be used for the workshop description) The intended audience for your workshop The learning objectives and outcomes you hope to achieve Any special requirements or resources needed to develop the workshop Before proposing a new workshop, please review our workshop development guidelines to ensure that your workshop follows best pedagogical practices and includes all necessary information. If your workshop proposal is accepted, we'll contact you to discuss next steps. You'll be responsible for developing the workshop content and materials, which will be reviewed by the DHRIFT Curriculum team before being added to the core curriculum. Once your workshop is created, follow the steps below to submit it for review.","title":"Proposing a New Workshop"},{"location":"propose-submit/#submitting-a-workshop-for-review","text":"If you've already developed a workshop and proposed the workshop to our team, you can submit it for review by following the steps below: Create a free GitHub account if you don't already have one. You'll need a GitHub account to submit your workshop materials and collaborate with the DHRIFT Curriculum Team. You can sign up for an account at GitHub.com . Make sure your workshop aligns with our workshop development guidelines . Contact the DHRIFT Curriculum Team who will then give you upload access to our submission repository . Clone the submission repository to your local machine and add your workshop materials to the repository. (You can also manually upload your workshop materials to the repository through the GitHub interface.) When adding your workshop materials, make sure to include the following files and information: Your workshop markdown file in the root directory (see our workshop anatomy for formatting specifications and our workshop guidelines for content requirements) If your workshop contains images, you must create a new folder in the /images directory and add your images to that folder. Your folder should be named the same as your workshop markdown file. Make sure to reference the images in your markdown file using the correct file path, e.g, ![alt text](/images/your-folder/your-image.jpg) If your workshop is supported by additional resources (e.g., code files, datasets), you must create a new folder in the /uploads directory and add your materials to that folder. Your folder should be named the same as your workshop markdown file. Make sure to reference the resources in your markdown file using the correct file path, e.g., /uploads/your-folder/your-resource.csv Create a pull request to submit your workshop for review. In your pull request, include a brief description of your workshop's materials and any special instructions or requirements for review. Once your pull request is submitted, the DHRIFT Curriculum Team will review your workshop and provide feedback by creating an issue . Issues act as a way to track and discuss changes to your workshop. We will correct any immediate formatting errors but you may be asked to make revisions to your workshop based on this feedback. All subsequent revisions should be made directly to the files in our submissions repository to ensure you are working from the latest version of the lesson file. Please respond to any feedback in a timely manner to expedite the review process. Note that issues, and subsequently the peer review discussion, are public. If you wish to speak with us privately about any feedback, please email the DHRIFT Curriculum Team . After your workshop has been reviewed and accepted, we will merge your pull request and your workshop will be added to the core curriculum. You will be credited as the workshop creator and will have the opportunity to contribute to future updates and revisions. If you would like to revise or update your workshop after it has been published, you can create a new pull request with your changes. The DHRIFT Curriculum Team will review your revisions and update the workshop as needed, following the same process as above. Please note that if we encounter errors in your workshop that are the result of further development of the DHRIFT platform, we will make the necessary changes to your workshop to ensure that it remains functional and accessible. We will notify you of any changes made to your workshop and provide an opportunity for you to review and approve them before they are published. After 3 years, we will add a note to the workshop indicating that it might be out of date and may need to be updated. We will also reach out to you to see if you would like to update the workshop or if you would like us to archive it. If you have any questions or need assistance with proposing or submitting a workshop, please contact the DHRIFT Curriculum Team . We're here to help!","title":"Submitting a Workshop for Review"},{"location":"propose-submit/#the-review-timeline","text":"All workshops submitted to the DHRIFT Curriculum Team for review will undergo a peer review process to ensure that they meet our workshop development guidelines and pedagogical standards. The peer review process includes the following steps: Initial Review : The DHRIFT Curriculum Team will review your workshop proposal or submission to ensure that it aligns with our guidelines and includes all necessary information. Peer Review : Your workshop will be reviewed by members of the DHRIFT Curriculum Team and external reviewers with expertise in the workshop topic. Reviewers will provide feedback on the content, structure, and pedagogical approach of your workshop in a GitHub issue. Feedback and Revisions : Check the feedback on your workshop from the DHRIFT Curriculum Team and reviewers. You may be asked to make revisions to your workshop based on this feedback. Final Review : Once your workshop has been revised, it will undergo a final review by the DHRIFT Curriculum Team to ensure that all feedback has been addressed and that the workshop meets our standards. Acceptance and Publication : If your workshop is accepted, it will be added to the core curriculum and made available to the public. You will be credited as the workshop creator and will have the opportunity to contribute to future updates and revisions. The peer review process is designed to ensure that all workshops in the DHRIFT core curriculum meet our high standards for quality, accessibility, and engagement. We appreciate your contributions to our community of practice and look forward to working with you to develop innovative and engaging workshops for digital humanities research and teaching.","title":"The Review Timeline"},{"location":"propose-submit/#after-your-workshop-is-published","text":"Once your workshop has been accepted and published in the core curriculum, it will be available to the public through the DHRIFT platform. Participants will be able to access your workshop materials, resources, and activities, and engage with the content at their own pace. As the workshop creator, you will have the opportunity to update and revise your workshop as needed, based on feedback from participants and the DHRIFT Curriculum Team. You can also contribute new workshops and resources to the core curriculum, expanding the range of topics and activities available to our community of learners.","title":"After Your Workshop is Published"},{"location":"propose-submit/#holding-us-accountable","text":"The DHRIFT Curriculum Team is committed to providing a transparent and inclusive peer review process for all workshop submissions. We welcome feedback and suggestions for improving our review process and ensuring that all workshops meet our high standards for quality and accessibility.","title":"Holding Us Accountable"},{"location":"teaching/","text":"Teaching with DHRIFT # Pedagogical Philosophy # DHRIFT is designed with a learner-focused pedagogical philosophy that emphasizes accessibility, interactivity, and engagement. The platform has been developed in conversation with an extensive community of DH graduate students, faculty, administrators, librarians, curators, and independent scholars, and our advisory board is drawn from a cross section of DH practitioners at institutional types such as community colleges, liberal arts colleges, regional colleges, and Historically Black Colleges and Universities (HBCUs). By engaging with this diverse community, we have been able to develop a platform that meets the needs of a wide range of learners and instructors. Additionally, DHRIFT values the principles of open education and open access. All workshop content on the platform is freely available to anyone who wishes to use it, and all workshops are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. This means that you are free to use, share, and adapt the content for non-commercial purposes, as long as you provide attribution to the original authors and share any derivative works under the same license. Workshop Philosophy # Our curricula reflect the pedagogical values of humanities instruction, drawing from years of feedback and iteration. Both textual and visual in design, workshops attempt to accommodate different learning styles. By embedding a technical interface in the curricula, DHRIFT streamlines the learning environment for both instructors and learners and reduces confusion caused by context switching. DHRIFT workshops emphasize practical coding through a humanities lens, providing learners tools to extend their skills into new domains relevant to their research. DHRIFT workshops are also designed to be accessible to learners with disabilities. The platform is built with accessibility in mind, following best practices for web accessibility and usability. DHRIFT workshops are designed to be screen reader-friendly, keyboard navigable, and color contrast compliant. Let's look at some best practices for teaching with DHRIFT. Best Practices # When teaching with DHRIFT, there are a few best practices you can follow to ensure a positive and engaging learning experience for your students. Here are some tips to keep in mind: Identify Clear Learning Objectives : Clearly present the learning objectives for each workshop and communicate them to your students at the outset. This will help students understand what they will be learning and why it is important. Provide Context : Provide context for the material you are teaching and explain how it relates to the broader areas of research students might be interested in. Additionally, consider ethical considerations and implications of the material you are teaching. Engage With the Platform's Features : Encourage students to actively engage with the material by attempting challenges, answering quizzes, or taking some time to write code on their own. Use a Variety of Teaching Methods : Use a variety of teaching methods to keep students engaged and accommodate different learning styles. This could include different forms of group work in which students attempt to solve a problem together, or individual work in which students complete a task on their own. Encourage Student's Autonomous Learning : Recommend not only that students revisit a workshop on their own after completion, but also to apply their newly acquired skills in a different domain. Give them some project ideas or tasks that they can try. While DHRIFT tries to accommodate these best practices in terms of its design and content, it is, as always, up to the instructor to ensure that these practices are implemented effectively in the classroom. Using a Pre-Existing Resource # Although you can create your own workshops from scratch, we also encourage you to explore and utilize the existing DHRIFT workshops available on the platform. These workshops have been developed and tested by experienced DH practitioners and educators and cover a wide range of topics and skill levels. By using these pre-existing resources, you can save time and effort in developing your own workshops and benefit from the expertise of the wider DH community. Depending on your needs and your students' experience, it is generally a good idea to start with the basics and build up to more advanced topics. Looking at the \"Prerequisites\" section of a workshop can help you determine if the workshop is appropriate for your students' skill level. For example, you might wish to have students work through the Command Line workshop before moving on to the Python workshop, as the former provides a foundation for the latter. If you are teaching a live session using a workshop from the platform, you might also suggest that students work through the workshop on their own before the session, so that they can come prepared with questions and be ready to engage with the material in a more meaningful way. Scaffolding a Workshop # When teaching with DHRIFT, you may want to scaffold your session to guide students through the material in a structured and logical way. Scaffolding involves breaking down the material into manageable chunks and providing support and guidance to help students progress through the material. The platform itself is designed to scaffold the learning experience, with workshops divided into sections and subsections that guide students through the material step by step. Still, it is a good idea as an instructor to work through the material yourself and identify which sections might be more challenging for students and where additional support might be needed. Teaching and Community Engagement # Additionally, DHRIFT is committed to fostering a community of practice around digital humanities pedagogy. We encourage instructors, learners, and developers to engage with the platform, share their experiences, and contribute to the ongoing development of the platform. We welcome feedback, suggestions, and contributions from the community and are always looking for ways to improve the platform and make it more useful for our users. Furthermore, we invite users to create and share with us their own workshops, curricula, and institutes. By contributing to the wider curricula available to learners, you can help build a rich and diverse collection of resources that benefit the wider DH community.","title":"Teaching Tips"},{"location":"teaching/#teaching-with-dhrift","text":"","title":"Teaching with DHRIFT"},{"location":"teaching/#pedagogical-philosophy","text":"DHRIFT is designed with a learner-focused pedagogical philosophy that emphasizes accessibility, interactivity, and engagement. The platform has been developed in conversation with an extensive community of DH graduate students, faculty, administrators, librarians, curators, and independent scholars, and our advisory board is drawn from a cross section of DH practitioners at institutional types such as community colleges, liberal arts colleges, regional colleges, and Historically Black Colleges and Universities (HBCUs). By engaging with this diverse community, we have been able to develop a platform that meets the needs of a wide range of learners and instructors. Additionally, DHRIFT values the principles of open education and open access. All workshop content on the platform is freely available to anyone who wishes to use it, and all workshops are licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. This means that you are free to use, share, and adapt the content for non-commercial purposes, as long as you provide attribution to the original authors and share any derivative works under the same license.","title":"Pedagogical Philosophy"},{"location":"teaching/#workshop-philosophy","text":"Our curricula reflect the pedagogical values of humanities instruction, drawing from years of feedback and iteration. Both textual and visual in design, workshops attempt to accommodate different learning styles. By embedding a technical interface in the curricula, DHRIFT streamlines the learning environment for both instructors and learners and reduces confusion caused by context switching. DHRIFT workshops emphasize practical coding through a humanities lens, providing learners tools to extend their skills into new domains relevant to their research. DHRIFT workshops are also designed to be accessible to learners with disabilities. The platform is built with accessibility in mind, following best practices for web accessibility and usability. DHRIFT workshops are designed to be screen reader-friendly, keyboard navigable, and color contrast compliant. Let's look at some best practices for teaching with DHRIFT.","title":"Workshop Philosophy"},{"location":"teaching/#best-practices","text":"When teaching with DHRIFT, there are a few best practices you can follow to ensure a positive and engaging learning experience for your students. Here are some tips to keep in mind: Identify Clear Learning Objectives : Clearly present the learning objectives for each workshop and communicate them to your students at the outset. This will help students understand what they will be learning and why it is important. Provide Context : Provide context for the material you are teaching and explain how it relates to the broader areas of research students might be interested in. Additionally, consider ethical considerations and implications of the material you are teaching. Engage With the Platform's Features : Encourage students to actively engage with the material by attempting challenges, answering quizzes, or taking some time to write code on their own. Use a Variety of Teaching Methods : Use a variety of teaching methods to keep students engaged and accommodate different learning styles. This could include different forms of group work in which students attempt to solve a problem together, or individual work in which students complete a task on their own. Encourage Student's Autonomous Learning : Recommend not only that students revisit a workshop on their own after completion, but also to apply their newly acquired skills in a different domain. Give them some project ideas or tasks that they can try. While DHRIFT tries to accommodate these best practices in terms of its design and content, it is, as always, up to the instructor to ensure that these practices are implemented effectively in the classroom.","title":"Best Practices"},{"location":"teaching/#using-a-pre-existing-resource","text":"Although you can create your own workshops from scratch, we also encourage you to explore and utilize the existing DHRIFT workshops available on the platform. These workshops have been developed and tested by experienced DH practitioners and educators and cover a wide range of topics and skill levels. By using these pre-existing resources, you can save time and effort in developing your own workshops and benefit from the expertise of the wider DH community. Depending on your needs and your students' experience, it is generally a good idea to start with the basics and build up to more advanced topics. Looking at the \"Prerequisites\" section of a workshop can help you determine if the workshop is appropriate for your students' skill level. For example, you might wish to have students work through the Command Line workshop before moving on to the Python workshop, as the former provides a foundation for the latter. If you are teaching a live session using a workshop from the platform, you might also suggest that students work through the workshop on their own before the session, so that they can come prepared with questions and be ready to engage with the material in a more meaningful way.","title":"Using a Pre-Existing Resource"},{"location":"teaching/#scaffolding-a-workshop","text":"When teaching with DHRIFT, you may want to scaffold your session to guide students through the material in a structured and logical way. Scaffolding involves breaking down the material into manageable chunks and providing support and guidance to help students progress through the material. The platform itself is designed to scaffold the learning experience, with workshops divided into sections and subsections that guide students through the material step by step. Still, it is a good idea as an instructor to work through the material yourself and identify which sections might be more challenging for students and where additional support might be needed.","title":"Scaffolding a Workshop"},{"location":"teaching/#teaching-and-community-engagement","text":"Additionally, DHRIFT is committed to fostering a community of practice around digital humanities pedagogy. We encourage instructors, learners, and developers to engage with the platform, share their experiences, and contribute to the ongoing development of the platform. We welcome feedback, suggestions, and contributions from the community and are always looking for ways to improve the platform and make it more useful for our users. Furthermore, we invite users to create and share with us their own workshops, curricula, and institutes. By contributing to the wider curricula available to learners, you can help build a rich and diverse collection of resources that benefit the wider DH community.","title":"Teaching and Community Engagement"},{"location":"whatis/","text":"What is DHRIFT? # DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology) is an open educational resource (OER) and publication platform for digital humanities (DH) workshops. Designed by humanities scholars for humanities scholars, DHRIFT provides a minimal computing, accessibility-aware, and interactive environment for teaching fundamental DH concepts. The platform includes a core set of more than 10 reviewed and tested workshops that have been developed and tested during two NEH-funded, week-long institutes, called the Digital Humanities Research Institutes (DHRI). Workshop topics range from learning the basics of Python, JavaScript, and R to conducting research through text analysis, data wrangling, and mapping. You can see the full list of workshops on the workshops page, accessible from the header menu or by clicking here. DHRIFT\u2019s core workshops are always accessible from and usable on our website; however, its flexible framework also allows users to build their own customized, static DHRIFT sites and tailor them for a variety of situations, such as teaching an undergraduate or graduate class, hosting a week-long skills institute, or organizing a series of professional development workshops. DHRIFT facilitates an instructor or organizations\u2019 ability to reproduce, adapt, and publish DH workshops with interactive, learner-focused features. All workshop content is accessible in the browser, avoiding the need for learners to install software or set up complex computing environments. While we realize everyone learns differently and no one tool can solve for the wide variety of possible hurdles for teaching and learning digital skills, DHRIFT is designed to be flexible. We have found that it can be useful in remote, in-person, and self-instructional modalities. It is designed to be accessible to learners of all backgrounds and skill levels, from beginners to more advanced users, but our content tends toward beginners. Whether you're new to digital humanities or an experienced practitioner, DHRIFT has something to offer you.","title":"What is DHRIFT?"},{"location":"whatis/#what-is-dhrift","text":"DHRIFT (Digital Humanities Resource Infrastructure for Teaching Technology) is an open educational resource (OER) and publication platform for digital humanities (DH) workshops. Designed by humanities scholars for humanities scholars, DHRIFT provides a minimal computing, accessibility-aware, and interactive environment for teaching fundamental DH concepts. The platform includes a core set of more than 10 reviewed and tested workshops that have been developed and tested during two NEH-funded, week-long institutes, called the Digital Humanities Research Institutes (DHRI). Workshop topics range from learning the basics of Python, JavaScript, and R to conducting research through text analysis, data wrangling, and mapping. You can see the full list of workshops on the workshops page, accessible from the header menu or by clicking here. DHRIFT\u2019s core workshops are always accessible from and usable on our website; however, its flexible framework also allows users to build their own customized, static DHRIFT sites and tailor them for a variety of situations, such as teaching an undergraduate or graduate class, hosting a week-long skills institute, or organizing a series of professional development workshops. DHRIFT facilitates an instructor or organizations\u2019 ability to reproduce, adapt, and publish DH workshops with interactive, learner-focused features. All workshop content is accessible in the browser, avoiding the need for learners to install software or set up complex computing environments. While we realize everyone learns differently and no one tool can solve for the wide variety of possible hurdles for teaching and learning digital skills, DHRIFT is designed to be flexible. We have found that it can be useful in remote, in-person, and self-instructional modalities. It is designed to be accessible to learners of all backgrounds and skill levels, from beginners to more advanced users, but our content tends toward beginners. Whether you're new to digital humanities or an experienced practitioner, DHRIFT has something to offer you.","title":"What is DHRIFT?"},{"location":"workshop-guidelines/","text":"Workshop Guidelines # These guidelines have been prepared to help you develop effective and engaging workshops for the DHRIFT platform. By following these guidelines, you can ensure that your workshop aligns with best pedagogical practices. While you are free to develop workshops on any topic related to digital humanities research and teaching, if you would like to propose a workshop for inclusion in the DHRIFT core curriculum, please review these guidelines first to ensure that your workshop meets our standards for quality, accessibility, and engagement. Getting Started # As you flesh out your workshop idea, consider the following questions to create an effective and engaging learning experience: What skill level is your workshop aimed at? (beginner, intermediate, advanced)? How does the workshop align with other workshops (if applicable) in the curriculum? Is there a clear progression of skills and knowledge across workshops? What are the learning objectives and outcomes you hope to achieve with your workshop? How will participants benefit from attending your workshop? What teaching methods and activities will you use to engage participants and facilitate learning? How will you assess participant learning and understanding? What resources and materials will you need to develop your workshop? Are there any special requirements or considerations to keep in mind? Style and Approach # DHRIFT workshops are not typically lecture-based but are designed to be interactive and hands-on. Reviewing the interactive features available in the DHRIFT platform can help prepare you for how you might structure your content and assess participant learning. In general, DHRIFT workshops work best when: - Your tone is formal but accessible, engaging, and inclusive. DHRIFT workshops should reflect the values of bias-free language and inclusive pedagogy. You can read more about writing with inclusive language in the APA Style Guide . - They are created with a variety of teaching modalities in mind. DHRIFT workshops should be accessible to a wide range of learners, from in-person to online. Consider how you might adapt your content for different learning environments. - Your content is clear, concise, and engaging. DHRIFT workshops should be easy to follow and understand, with clear instructions and explanations. Use examples, case studies, and activities to illustrate key concepts and engage participants. Keep in mind that technical jargon should be thoroughly explained and reinforced throughout the workshop. - Your lessons are well-organized and structured. DHRIFT workshops should follow a logical sequence of topics and activities, with clear transitions between sections. Use headings, subheadings, and bullet points to break up text and make it easier to read. Keep in mind this is a participatory workshop, not a lecture or an academic paper. Open-Source and Open-Access # DHRIFT workshops are open-source and open-access, meaning that they are freely available to the public and can be reused, remixed, and redistributed under a Creative Commons license .TODO: what kind? By contributing to the DHRIFT platform, you agree to share your work with the wider community of digital humanities researchers and educators. Write for a Diverse Audience # When developing your workshop, keep in mind that your content will be shared with a diverse audience of learners, from students and scholars to professionals and enthusiasts. Make sure that your content is accessible, inclusive, and engaging to a wide range of participants. Follow these global-facing guidelines to ensure that your workshop is welcoming and respectful to all learners: - Use inclusive language that is free from bias, stereotypes, and discrimination. - Cultural references should be given context or explained. Assume that your audience is not familiar with specific cultural references. - Avoid using regional humor or sarcasm that may be misinterpreted or offensive. - Use images, examples, and case studies that reflect the diversity of the global community. - When referencing geographic locations, be specific: use the full name of the location (e.g., United States instead of US) to avoid confusion. - Be mindful when using racial or ethnic language. Historic terms no longer in use should be used only in their historical context and only when necessary. - Avoid using gendered language when possible. Write for the Future # DHRIFT workshops should ideally be relevant and useful to participants for years to come. When developing your workshop, consider how you can future-proof your content by: - Note what version of software or tools you are using. If possible, use the most recent version and provide instructions for updating or adapting to future versions. - Reduce reliance on screenshots or images that may change over time (e.g., user interfaces, websites). - Pointing to external resources or documentation for tools or technologies that may change frequently. - Use open data sources or datasets that are freely available and accessible to all participants. Include them in your workshop materials or provide links to where they can be accessed. If you are submitting a workshop to our core curriculum, it is likely we will ask you to update your workshop (if needed) to ensure that it remains relevant and up-to-date. See our submission guidelines for more information. Specific Writing Guidelines # This section contains specific guidelines for writing content for DHRIFT workshops. Please review these guidelines before and after you write your workshop content. When using coding terms or syntax in written paragraphs, use backticks ( `foo` ) to indicate they are code. When using code blocks, use triple backticks ( ``` ) to enclose the code block. For example: python def hello_world(): print(\"Hello, World!\") Use headings and subheadings to organize your content. Level 1 headings ( # ) should be used for main sections, level 2 headings ( ## ) for subsections that you want to to be visible in the table of contents, and level 3 headings ( ### ) for subsections that you want to use for readability but be hidden in the table of contents. Use quotes to highlight key points, definitions, or examples. Quotes should be formatted as follows: markdown > This is a quote. Use lists (bulleted or numbered) to break up text and make it easier to read. Lists should be formatted as follows: ```markdown This is a bulleted list item. This is another bulleted list item. markdown This is a numbered list item. This is another numbered list item. ``` Content Formatting Guidelines #","title":"Workshop Guidelines"},{"location":"workshop-guidelines/#workshop-guidelines","text":"These guidelines have been prepared to help you develop effective and engaging workshops for the DHRIFT platform. By following these guidelines, you can ensure that your workshop aligns with best pedagogical practices. While you are free to develop workshops on any topic related to digital humanities research and teaching, if you would like to propose a workshop for inclusion in the DHRIFT core curriculum, please review these guidelines first to ensure that your workshop meets our standards for quality, accessibility, and engagement.","title":"Workshop Guidelines"},{"location":"workshop-guidelines/#getting-started","text":"As you flesh out your workshop idea, consider the following questions to create an effective and engaging learning experience: What skill level is your workshop aimed at? (beginner, intermediate, advanced)? How does the workshop align with other workshops (if applicable) in the curriculum? Is there a clear progression of skills and knowledge across workshops? What are the learning objectives and outcomes you hope to achieve with your workshop? How will participants benefit from attending your workshop? What teaching methods and activities will you use to engage participants and facilitate learning? How will you assess participant learning and understanding? What resources and materials will you need to develop your workshop? Are there any special requirements or considerations to keep in mind?","title":"Getting Started"},{"location":"workshop-guidelines/#style-and-approach","text":"DHRIFT workshops are not typically lecture-based but are designed to be interactive and hands-on. Reviewing the interactive features available in the DHRIFT platform can help prepare you for how you might structure your content and assess participant learning. In general, DHRIFT workshops work best when: - Your tone is formal but accessible, engaging, and inclusive. DHRIFT workshops should reflect the values of bias-free language and inclusive pedagogy. You can read more about writing with inclusive language in the APA Style Guide . - They are created with a variety of teaching modalities in mind. DHRIFT workshops should be accessible to a wide range of learners, from in-person to online. Consider how you might adapt your content for different learning environments. - Your content is clear, concise, and engaging. DHRIFT workshops should be easy to follow and understand, with clear instructions and explanations. Use examples, case studies, and activities to illustrate key concepts and engage participants. Keep in mind that technical jargon should be thoroughly explained and reinforced throughout the workshop. - Your lessons are well-organized and structured. DHRIFT workshops should follow a logical sequence of topics and activities, with clear transitions between sections. Use headings, subheadings, and bullet points to break up text and make it easier to read. Keep in mind this is a participatory workshop, not a lecture or an academic paper.","title":"Style and Approach"},{"location":"workshop-guidelines/#open-source-and-open-access","text":"DHRIFT workshops are open-source and open-access, meaning that they are freely available to the public and can be reused, remixed, and redistributed under a Creative Commons license .TODO: what kind? By contributing to the DHRIFT platform, you agree to share your work with the wider community of digital humanities researchers and educators.","title":"Open-Source and Open-Access"},{"location":"workshop-guidelines/#write-for-a-diverse-audience","text":"When developing your workshop, keep in mind that your content will be shared with a diverse audience of learners, from students and scholars to professionals and enthusiasts. Make sure that your content is accessible, inclusive, and engaging to a wide range of participants. Follow these global-facing guidelines to ensure that your workshop is welcoming and respectful to all learners: - Use inclusive language that is free from bias, stereotypes, and discrimination. - Cultural references should be given context or explained. Assume that your audience is not familiar with specific cultural references. - Avoid using regional humor or sarcasm that may be misinterpreted or offensive. - Use images, examples, and case studies that reflect the diversity of the global community. - When referencing geographic locations, be specific: use the full name of the location (e.g., United States instead of US) to avoid confusion. - Be mindful when using racial or ethnic language. Historic terms no longer in use should be used only in their historical context and only when necessary. - Avoid using gendered language when possible.","title":"Write for a Diverse Audience"},{"location":"workshop-guidelines/#write-for-the-future","text":"DHRIFT workshops should ideally be relevant and useful to participants for years to come. When developing your workshop, consider how you can future-proof your content by: - Note what version of software or tools you are using. If possible, use the most recent version and provide instructions for updating or adapting to future versions. - Reduce reliance on screenshots or images that may change over time (e.g., user interfaces, websites). - Pointing to external resources or documentation for tools or technologies that may change frequently. - Use open data sources or datasets that are freely available and accessible to all participants. Include them in your workshop materials or provide links to where they can be accessed. If you are submitting a workshop to our core curriculum, it is likely we will ask you to update your workshop (if needed) to ensure that it remains relevant and up-to-date. See our submission guidelines for more information.","title":"Write for the Future"},{"location":"workshop-guidelines/#specific-writing-guidelines","text":"This section contains specific guidelines for writing content for DHRIFT workshops. Please review these guidelines before and after you write your workshop content. When using coding terms or syntax in written paragraphs, use backticks ( `foo` ) to indicate they are code. When using code blocks, use triple backticks ( ``` ) to enclose the code block. For example: python def hello_world(): print(\"Hello, World!\") Use headings and subheadings to organize your content. Level 1 headings ( # ) should be used for main sections, level 2 headings ( ## ) for subsections that you want to to be visible in the table of contents, and level 3 headings ( ### ) for subsections that you want to use for readability but be hidden in the table of contents. Use quotes to highlight key points, definitions, or examples. Quotes should be formatted as follows: markdown > This is a quote. Use lists (bulleted or numbered) to break up text and make it easier to read. Lists should be formatted as follows: ```markdown This is a bulleted list item. This is another bulleted list item. markdown This is a numbered list item. This is another numbered list item. ```","title":"Specific Writing Guidelines"},{"location":"workshop-guidelines/#content-formatting-guidelines","text":"","title":"Content Formatting Guidelines"},{"location":"workshopanatomy/","text":"Anatomy of a DHRIFT Workshop # DHRIFT workshops follow a structured style sheet based on years of experience teaching DH workshops. This entry describes how DHRIFT Workshops are organized, including required and optional elements, etc. Workshop Title # Title : Choose a descriptive and engaging title for your workshop that clearly communicates the topic and content to participants. Workshop Description # Description : Provide a brief overview of the workshop content, objectives, and learning outcomes. The description should be clear, concise, and engaging to attract participants. Workshop Duration # Duration : Determine the length of your workshop based on the content and learning objectives. Workshops can range from 1-3 hours, half-day, full-day, or multi-day events. Learning Objectives # Objectives : Define clear and measurable learning objectives for your workshop. Participants should understand what they will learn and achieve by the end of the workshop.","title":"Anatomy of a Workshop"},{"location":"workshopanatomy/#anatomy-of-a-dhrift-workshop","text":"DHRIFT workshops follow a structured style sheet based on years of experience teaching DH workshops. This entry describes how DHRIFT Workshops are organized, including required and optional elements, etc.","title":"Anatomy of a DHRIFT Workshop"},{"location":"workshopanatomy/#workshop-title","text":"Title : Choose a descriptive and engaging title for your workshop that clearly communicates the topic and content to participants.","title":"Workshop Title"},{"location":"workshopanatomy/#workshop-description","text":"Description : Provide a brief overview of the workshop content, objectives, and learning outcomes. The description should be clear, concise, and engaging to attract participants.","title":"Workshop Description"},{"location":"workshopanatomy/#workshop-duration","text":"Duration : Determine the length of your workshop based on the content and learning objectives. Workshops can range from 1-3 hours, half-day, full-day, or multi-day events.","title":"Workshop Duration"},{"location":"workshopanatomy/#learning-objectives","text":"Objectives : Define clear and measurable learning objectives for your workshop. Participants should understand what they will learn and achieve by the end of the workshop.","title":"Learning Objectives"}]}